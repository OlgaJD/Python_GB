"""Создайте модуль с функцией внутри.
Функция получает на вход загадку, список с возможными вариантами отгадок и количество попыток на угадывание.
Программа возвращает номер попытки, с которой была отгадана загадка или ноль, если попытки исчерпаны.
"""
"""
Добавьте в модуль с загадками функцию, которая хранит словарь списков. 
Ключ словаря - загадка, значение - список с отгадками. 
Функция в цикле вызывает загадывающую функцию, чтобы передать ей все свои загадки. 
"""
"""Добавьте в модуль с загадками функцию, которая принимает на вход строку (текст загадки) и число (номер попытки, с которой она угадана). 
Функция формирует словарь с информацией о результатах отгадывания. 
Для хранения используйте защищённый словарь уровня модуля.
Отдельно напишите функцию, которая выводит результаты угадывания из защищённого словаря в удобном для чтения виде. 
Для формирования результатов используйте генераторное выражение.
"""
from random import choice, randint

_result_dict = {}


def puzzle_store():
    dict_puzzle = {'Зимой и летом одним цветом.': ['елка', 'ель', 'елочка'],
                   'Висит груша нельзя скушать.': ['лампа', 'лампочка'],
                   'Не лает не кусает, в дом не пускает': ['замок', 'замочек']}
    result = choice(list(dict_puzzle))
    return result, dict_puzzle[result]


def save_result(some_puzzle, tries):
    _result_dict[some_puzzle] = tries


def show_results():
    return '\n'.join([f'Загадка: "{some_puzzle}" отгадана с {tries} попытки'
                      for some_puzzle, tries in _result_dict.items()])


def puzzle_guess(count):
    for _ in range(count):
        some_puzzle, answers = puzzle_store()
        tries = randint(3, 5)
        print(some_puzzle)
        print(f'Осталось {tries} попыток\n')
        count = 0
        while count < tries:
            user_answer = input('Введите ваш ответ: ').lower()
            if user_answer in answers:
                print(f'Правильный ответ! Вы выйграли с {count + 1} попытки!\n')
                save_result(some_puzzle, count)
                break
            else:
                print('неверно, попробуйте еще раз ')
            count += 1
            print(f'Осталось {tries - count} попыток')
        else:
            print(f'Попытки закончились, Вы проиграли. Ответ был {answers[0]}\n')


puzzle_guess(5)
print(show_results())
