"""
üìå–°–æ–∑–¥–∞–π—Ç–µ —Ç—Ä–∏ (–∏–ª–∏ –±–æ–ª–µ–µ) –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –∫–ª–∞—Å—Å–æ–≤ –∂–∏–≤–æ—Ç–Ω—ã—Ö. –ù–∞–ø—Ä–∏–º–µ—Ä —Ä—ã–±—ã, –ø—Ç–∏—Ü—ã –∏ —Ç.–ø.
üìå–£ –∫–∞–∂–¥–æ–≥–æ –∫–ª–∞—Å—Å–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∫–∞–∫ –æ–±—â–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä –∏–º—è, —Ç–∞–∫ –∏ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –¥–ª—è –∫–ª–∞—Å—Å–∞.
üìå–î–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–ª–∞—Å—Å–∞ —Å–æ–∑–¥–∞–π—Ç–µ –º–µ—Ç–æ–¥, –≤—ã–≤–æ–¥—è—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—É—é –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞.
"""


class Animal:
    def __init__(self, name: str, age, kind='–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π', **kwargs):
        self.name = name
        self.age = age
        self.kind = kind
        self.kwargs = kwargs

    def get_info(self):
        return f'–ò–º—è: {self.name}. –í–æ–∑—Ä–∞—Å—Ç: {self.age}. –í–∏–¥: {self.kind}.'

    def get_special(self):  # –¢–æ–ª—å–∫–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã (**kwargs)
        special = ' '.join((f'–ò–º—è: {self.name}.', *(k.title() + ": " + v + "." for k, v in self.kwargs.items())))
        return special

    def get_name(self):
        return '–ò–º—è: ' + self.name

    def get_age(self):
        return '–í–æ–∑—Ä–∞—Å—Ç: ' + str(self.age)

    def get_kind(self):
        return '–í–∏–¥: ' + str(self.kind)


class Dog(Animal):
    def __init__(self, name, age, breed='–î–≤–æ—Ä–Ω—è–∂–∫–∞', **kwargs):
        super().__init__(name, age)
        self.kind = '–°–æ–±–∞–∫–∞'
        self.breed = breed
        self.kwargs = kwargs

    def get_info(self):
        return super().get_info() + ' –ü–æ—Ä–æ–¥–∞ ' + self.breed

    def voice(self):
        print(self.name + ': VOOFFF')


class Cat(Animal):
    def __init__(self, name, age, color='—Ä–∞–∑–Ω–æ—Ü–≤–µ—Ç–Ω—ã–π', **kwargs):
        super().__init__(name, age)
        self.kind = '–ö–æ—Ç'
        self.color = color
        self.kwargs = kwargs

    def get_info(self):
        return super().get_info() + ' –¶–≤–µ—Ç ' + self.color

    def feed(self, food=1):
        print(self.name + ': ' + '–Ω—è–º ' * food)


class Mouse(Animal):
    def __init__(self, name, age, habitat='–Ω–æ—Ä–∞', **kwargs):
        super().__init__(name, age)
        self.kind = '–ú—ã—à—å'
        self.habitat = habitat
        self.kwargs = kwargs

    def get_info(self):
        return super().get_info() + ' –ú–µ—Å—Ç–æ –æ–±–∏—Ç–∞–Ω–∏—è ' + self.habitat


class Factory:

    @classmethod
    def new_animal(cls, kind: str = '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π', name: str = '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ', age: str = '–Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω', **kwargs):
        if kind.lower() == 'dog':
            return Dog(name, age, **kwargs)
        elif kind.lower() == 'cat':
            return Cat(name, age, **kwargs)
        elif kind.lower() == 'mouse':
            return Mouse(name, age, **kwargs)
        else:
            return Animal(name, age, **kwargs)


if __name__ == '__main__':
    factory = Factory()

    spike = factory.new_animal('dog', name='Spike', age='10', breed='–ë—É–ª—å–¥–æ–≥', specialty='–ª—é–±–∏—Ç –ø–æ–∫—É—à–∞—Ç—å')
    tom = factory.new_animal('cat', name='Tom', age='2', color='—á–µ—Ä–Ω—ã–π')
    jerry = factory.new_animal('mouse', 'Jerry', crimes='—É–∫—Ä–∞–ª 3 –≥–æ–ª–æ–≤–∫–∏ —Å—ã—Ä–∞', friend='Spike', hobbies='–¥—Ä–∞–∑–Ω–∏—Ç—å –∫–æ—Ç–∞')
    puppy = factory.new_animal('dog', age='1', name='Puppy')
    casper = factory.new_animal(name='Casper', color='–ø—Ä–æ–∑—Ä–∞—á–Ω—ã–π', habitat='–¥–æ–º', sociality='–¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π',
                                skills='—Ö–æ–¥–∏—Ç —Å–∫–≤–æ–∑—å —Å—Ç–µ–Ω—ã')

    for animal in [puppy, tom, jerry, casper]:
        print(animal.get_info())
    print()
    for animal in [spike, jerry, casper]:
        print(animal.get_special())
    print()
    spike.voice()
    tom.feed(3)
